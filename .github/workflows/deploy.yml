name: Build & Deploy

on:
  push:
    branches:
      - master

jobs:
  push-compose:
    name: push docker-compose.yml to server
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: copy docker-compose.yml to server
        uses: appleboy/scp-action@master
        with:
          host: "194.87.94.5"
          username: "lev"
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          source: "docker-compose.yml"
          target: "/home/lev/project"

  build-and-push:
    name: build bot by maven, build docker images, push to hub
    runs-on: ubuntu-latest
    needs: push-compose
    steps:
      - uses: actions/checkout@v3

      - name: set up jdk 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt-openj11'

      - name: build by maven
        run: |
          cd bot
          mvn clean package
          cd ..

      - name: build docker images
        run: |
          # api
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/avito-bot:latest ./bot
          
          # frontend
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/frontend-http-server:latest ./frontend

      - name: log in docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: push docker images to docker hub
        run: |
          # push api image
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/avito-bot:latest
          
          # push frontend image
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/frontend-http-server:latest

  deploy:
    name: deploy to server
    runs-on: ubuntu-latest
    needs: build-and-push
    if: success()
    steps:
      - name: connect to server and deploy
        uses: appleboy/ssh-action@master
        with:
          host: "194.87.94.5"
          username: "lev"
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd project
            echo DB_USERNAME = ${{ secrets.POSTGRES_USERNAME }} >> .env
            echo DB_PASSWORD = ${{ secrets.POSTGRES_PASSWORD }} >> .env
            
            docker stop frontend
            docker stop bot
            
            docker rm frontend
            docker rm bot
            
            docker rmi ${{ secrets.DOCKER_HUB_USERNAME }}/avito-bot
            docker rmi ${{ secrets.DOCKER_HUB_USERNAME }}/frontend-http-server
  
            docker-compose up -d 
            docker ps -a
            
